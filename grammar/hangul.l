%{
#include "token.h"
#include <string>

std::string buffer[3];
bool buffer_state[3];

#define CHOSUNG 0
#define JUNGSUNG 1
#define JONGSUNG 2

void fill_buffer(int pos, const std::string& in)
{
std::cout<<in<<std::endl;
	buffer[pos] = in;
}
void set_buffer(int pos, bool state)
{
	buffer_state[pos] = state;
}
%}

%option noyywrap

KEY_CHUN [\*]
KEY_JI [-]
KEY_IN [/]
KEY_FLUSH [3]
KEY_DOT [1]
KEY_GA_KA [7]
KEY_NA_RA [8]
KEY_DA_TA [9]
KEY_BA_PA [4]
KEY_SA_HA [5]
KEY_JA_CHA [6]
KEY_A_MA [2]

ENTER [\n\r]

CHUN {KEY_CHUN}
JI {KEY_JI}
IN {KEY_IN}

GA {KEY_GA_KA}
NA {KEY_NA_RA}
DA {KEY_DA_TA}
BA {KEY_BA_PA}
SA {KEY_SA_HA}
A {KEY_A_MA}
JA {KEY_JA_CHA}

CHOSUNG {GA}|{NA}|{DA}|{RA}|{MA}|{BA}|{SA}|{A}|{JA}|{CHA}|{KA}|{TA}|{PA}|{HA}|{KKA}|{DDA}|{PPA}|{SSA}|{JJA}



MOUM_A {KEY_IN}{KEY_CHUN}
YA {KEY_IN}{KEY_CHUN}{KEY_CHUN}
EO {KEY_CHUN}{KEY_IN}
YEO {KEY_CHUN}{KEY_IN}{KEY_IN}
O {KEY_CHUN}{KEY_JI}
YO {KEY_CHUN}{KEY_CHUN}{KEY_JI}
U {KEY_JI}{KEY_CHUN}
YU {KEY_JI}{KEY_CHUN}{KEY_CHUN}
EU {KEY_JI}
I {KEY_IN}
WA {KEY_CHUN}{KEY_JI}{KEY_IN}{KEY_CHUN}
WO {KEY_JI}{KEY_CHUN}{KEY_CHUN}{KEY_IN}
WAE {KEY_CHUN}{KEY_JI}{KEY_IN}{KEY_CHUN}{KEY_IN}
WE {KEY_JI}{KEY_CHUN}{KEY_CHUN}{KEY_IN}{KEY_IN}
AE {KEY_IN}{KEY_CHUN}{KEY_IN}
YAE {KEY_IN}{KEY_CHUN}{KEY_CHUN}{KEY_IN}
E {KEY_CHUN}{KEY_IN}{KEY_IN}
YE {KEY_CHUN}{KEY_CHUN}{KEY_IN}{KEY_IN}
OE {KEY_CHUN}{KEY_JI}{KEY_IN}
WI {KEY_JI}{KEY_CHUN}{KEY_IN}
UI {KEY_JI}{KEY_IN}

JUNGSUNG {MOUM_A}|{YA}|{EO}|{YEO}|{O}|{YO}|{U}|{YU}|{EU}|{I}|{WA}|{WO}|{WAE}|{WE}|{AE}|{YAE}|{E}|{YE}|{OE}|{WI}|{UI}

GUSU {GA}{SA}
NUJU {NA}{JA}
RUGU {RA}{GA}
MUGU {MA}{GA}
BUSU {BA}{SA}
NUHU {NA}{HA}

RUMU {RA}{MA}
RUSU {RA}{SA}
RUTU {RA}{TA}
RUPU {RA}{PA}
RUHU {RA}{HA}

JONGSUNG_BOKYONG_CHOSUNG {GUSU}|{NUJU}|{RUGU}|{MUGU}|{BUSU}|{NUHU}|{RUMU}|{RUSU}|{RUTU}|{RUPU}|{RUHU}

BATCHIM {GA}|{NA}|{DA}|{RA}|{MA}|{BA}|{SA}|{A}|{JA}|{CHA}|{KA}|{TA}|{PA}|{HA}|{KKA}|{SSA}|{JONGSUNG_BOKYONG_CHOSUNG}

JAUM_7 {GA}|{NA}|{DA}|{BA}|{SA}|{JA}|{A}
MOUM_3 {KEY_CHUN}|{KEY_JI}|{KEY_IN}
SIGMA {JAUM_7}|{MOUM_3}

%s state_S
%s STATE_MOUM
%s STATE_MOUM_C
%s STATE_MOUM_CC

%s STATE_MOUM_A
%s STATE_MOUM_YA
%s STATE_MOUM_EO
%s STATE_MOUM_YEO
%s STATE_MOUM_O
%s STATE_MOUM_YO
%s STATE_MOUM_U
%s STATE_MOUM_YU
%s STATE_MOUM_EU
%s STATE_MOUM_I
%s STATE_MOUM_AE
%s STATE_MOUM_YAE
%s STATE_MOUM_E
%s STATE_MOUM_YE
%s STATE_MOUM_UI
%s STATE_MOUM_WA
%s STATE_MOUM_WAE
%s STATE_MOUM_OE
%s STATE_MOUM_WO
%s STATE_MOUM_WE
%s STATE_MOUM_WI

%s STATE_S
%s STATE_CHOSUNG_GA
%s STATE_CHOSUNG_NA
%s STATE_CHOSUNG_DA
%s STATE_CHOSUNG_RA
%s STATE_CHOSUNG_MA
%s STATE_CHOSUNG_BA
%s STATE_CHOSUNG_SA
%s STATE_CHOSUNG_A
%s STATE_CHOSUNG_JA
%s STATE_CHOSUNG_CHA
%s STATE_CHOSUNG_KA
%s STATE_CHOSUNG_TA
%s STATE_CHOSUNG_PA
%s STATE_CHOSUNG_HA
%s STATE_CHOSUNG_KKA
%s STATE_CHOSUNG_DDA
%s STATE_CHOSUNG_PPA
%s STATE_CHOSUNG_SSA
%s STATE_CHOSUNG_JJA

%%

<INITIAL,STATE_S>{
{GA} { fill_buffer(CHOSUNG,"ㄱ"); BEGIN(STATE_CHOSUNG_GA); }
{NA} { fill_buffer(CHOSUNG,"ㄴ"); BEGIN(STATE_CHOSUNG_NA); }
{DA} { fill_buffer(CHOSUNG,"ㄷ"); BEGIN(STATE_CHOSUNG_DA); }
{BA} { fill_buffer(CHOSUNG,"ㅂ"); BEGIN(STATE_CHOSUNG_BA); }
{SA} { fill_buffer(CHOSUNG,"ㅅ"); BEGIN(STATE_CHOSUNG_SA); }
{JA} { fill_buffer(CHOSUNG,"ㅈ"); BEGIN(STATE_CHOSUNG_JA); }
{A} { fill_buffer(CHOSUNG,"ㅇ"); BEGIN(STATE_CHOSUNG_A); }
}

<STATE_CHOSUNG_GA>{GA} { fill_buffer(CHOSUNG,"ㅋ"); BEGIN(STATE_CHOSUNG_KA); }
<STATE_CHOSUNG_KA>{GA} { fill_buffer(CHOSUNG,"ㄲ"); BEGIN(STATE_CHOSUNG_KKA); }
<STATE_CHOSUNG_KKA>{GA} { fill_buffer(CHOSUNG,"ㄱ"); BEGIN(STATE_CHOSUNG_GA); }

<STATE_CHOSUNG_DA>{DA} { fill_buffer(CHOSUNG,"ㅌ"); BEGIN(STATE_CHOSUNG_TA); }
<STATE_CHOSUNG_TA>{DA} { fill_buffer(CHOSUNG,"ㄸ"); BEGIN(STATE_CHOSUNG_DDA); }
<STATE_CHOSUNG_DDA>{DA} { fill_buffer(CHOSUNG,"ㄷ"); BEGIN(STATE_CHOSUNG_DA); }

<STATE_CHOSUNG_BA>{BA} { fill_buffer(CHOSUNG,"ㅍ"); BEGIN(STATE_CHOSUNG_PA); }
<STATE_CHOSUNG_PA>{BA} { fill_buffer(CHOSUNG,"ㅃ"); BEGIN(STATE_CHOSUNG_PPA); }
<STATE_CHOSUNG_PPA>{BA} { fill_buffer(CHOSUNG,"ㅂ"); BEGIN(STATE_CHOSUNG_BA); }

<STATE_CHOSUNG_SA>{SA} { fill_buffer(CHOSUNG,"ㅎ"); BEGIN(STATE_CHOSUNG_HA); }
<STATE_CHOSUNG_HA>{SA} { fill_buffer(CHOSUNG,"ㅆ"); BEGIN(STATE_CHOSUNG_SSA); }
<STATE_CHOSUNG_SSA>{SA} { fill_buffer(CHOSUNG,"ㅅ"); BEGIN(STATE_CHOSUNG_SA); }

<STATE_CHOSUNG_JA>{JA} { fill_buffer(CHOSUNG,"ㅊ"); BEGIN(STATE_CHOSUNG_CHA); }
<STATE_CHOSUNG_CHA>{JA} { fill_buffer(CHOSUNG,"ㅉ"); BEGIN(STATE_CHOSUNG_JJA); }
<STATE_CHOSUNG_JJA>{JA} { fill_buffer(CHOSUNG,"ㅈ"); BEGIN(STATE_CHOSUNG_JA); }

<STATE_CHOSUNG_GA,STATE_CHOSUNG_NA,STATE_CHOSUNG_DA,STATE_CHOSUNG_RA,STATE_CHOSUNG_MA,STATE_CHOSUNG_BA,STATE_CHOSUNG_SA,STATE_CHOSUNG_A,STATE_CHOSUNG_JA,STATE_CHOSUNG_CHA,STATE_CHOSUNG_KA,STATE_CHOSUNG_TA,STATE_CHOSUNG_PA,STATE_CHOSUNG_HA,STATE_CHOSUNG_KKA,STATE_CHOSUNG_DDA,STATE_CHOSUNG_PPA,STATE_CHOSUNG_SSA,STATE_CHOSUNG_JJA>
{
{CHUN} {fill_buffer(JUNGSUNG,"·"); BEGIN(STATE_MOUM_C);}
{JI} {fill_buffer(JUNGSUNG,"ㅡ"); BEGIN(STATE_MOUM_EU);}
{IN} {fill_buffer(JUNGSUNG,"ㅣ"); BEGIN(STATE_MOUM_I);}
}

<STATE_MOUM_C>
{
{CHUN} {fill_buffer(JUNGSUNG,"··"); BEGIN(STATE_MOUM_CC);}
{JI} {fill_buffer(JUNGSUNG,"ㅗ"); BEGIN(STATE_MOUM_O);}
{IN} {fill_buffer(JUNGSUNG,"ㅓ"); BEGIN(STATE_MOUM_EO);}
}

<STATE_MOUM_EU>
{
{CHUN} {fill_buffer(JUNGSUNG,"ㅜ"); BEGIN(STATE_MOUM_U);}
{IN} {fill_buffer(JUNGSUNG,"ㅢ"); BEGIN(STATE_MOUM_UI);}
}

<STATE_MOUM_I>
{
{CHUN} {fill_buffer(JUNGSUNG,"ㅏ"); BEGIN(STATE_MOUM_A);}
}

<STATE_MOUM_CC>
{
{JI} {fill_buffer(JUNGSUNG,"ㅛ"); BEGIN(STATE_MOUM_YO);}
{IN} {fill_buffer(JUNGSUNG,"ㅕ"); BEGIN(STATE_MOUM_YEO);}
}

<STATE_MOUM_O>
{
{IN} {fill_buffer(JUNGSUNG,"ㅚ"); BEGIN(STATE_MOUM_OE);}
}

<STATE_MOUM_EO>
{
{IN} {fill_buffer(JUNGSUNG,"ㅔ"); BEGIN(STATE_MOUM_E);}
}

<STATE_MOUM_U>
{
{CHUN} {fill_buffer(JUNGSUNG,"ㅠ"); BEGIN(STATE_MOUM_YU);}
{IN} {fill_buffer(JUNGSUNG,"ㅟ"); BEGIN(STATE_MOUM_WI);}
}

<STATE_MOUM_A>
{
{CHUN} {fill_buffer(JUNGSUNG,"ㅑ"); BEGIN(STATE_MOUM_YA);}
{IN} {fill_buffer(JUNGSUNG,"ㅐ"); BEGIN(STATE_MOUM_AE);}
}

<STATE_MOUM_YEO>{IN} {fill_buffer(JUNGSUNG,"ㅖ"); BEGIN(STATE_MOUM_YE);}
<STATE_MOUM_OE>{CHUN} {fill_buffer(JUNGSUNG,"ㅘ"); BEGIN(STATE_MOUM_WA);}
<STATE_MOUM_YU>{IN} {fill_buffer(JUNGSUNG,"ㅝ"); BEGIN(STATE_MOUM_WO);}
<STATE_MOUM_YA>{IN} {fill_buffer(JUNGSUNG,"ㅒ"); BEGIN(STATE_MOUM_YAE);}

<STATE_MOUM_WA>{IN} {fill_buffer(JUNGSUNG,"ㅙ"); BEGIN(STATE_MOUM_WAE);}
<STATE_MOUM_WO>{IN} {fill_buffer(JUNGSUNG,"ㅞ"); BEGIN(STATE_MOUM_WE);}

<*>{ENTER}	{ return FLUSH; }

%%

